searchState.loadedDescShard("sw8s_rust_lib", 0, "Set to <code>1.0</code> or <code>-1.0</code>.\nSimplifies combining tuple actions Takes input as <code>wrapper</code>, …\nLoads model from file, mostly at compile time\nAdds protocol requirements (e.g. message id, escapes) to a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWrites out a message body and only gives acknowledge status\nWrites out a message body and only gives acknowledge status\nReturns adjust end_idx\nDiscard start, end, and escape bytes\nReads from serial resource, updating ack_map\nImplementing …\nBased on …\nSee …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\nBoth connections are necessary for the simulator to run, …\nSet thruster inversions\nGet field <code>_tx</code> from instance of <code>ResponseMap</code>.\nGet field <code>ack_map</code> from instance of <code>ResponseMap</code>.\nGet field <code>bno055_status</code> from instance of <code>ResponseMap</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGet field <code>ms5837_status</code> from instance of <code>ResponseMap</code>.\nReads from serial resource, updating ack_map\nGet field <code>watchdog_status</code> from instance of <code>ResponseMap</code>.\nSee …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet field <code>pitch</code> from instance of <code>Angles</code>.\nGet field <code>quat_w</code> from instance of <code>Angles</code>.\nGet field <code>quat_x</code> from instance of <code>Angles</code>.\nGet field <code>quat_y</code> from instance of <code>Angles</code>.\nGet field <code>quat_z</code> from instance of <code>Angles</code>.\nGet field <code>roll</code> from instance of <code>Angles</code>.\nGet field <code>yaw</code> from instance of <code>Angles</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet field <code>_tx</code> from instance of <code>Statuses</code>.\nGet field <code>ack_map</code> from instance of <code>Statuses</code>.\nReturns the argument unchanged.\nGet field <code>humid</code> from instance of <code>Statuses</code>.\nCalls <code>U::from(self)</code>.\nGet field <code>leak</code> from instance of <code>Statuses</code>.\nGet field <code>shutdown</code> from instance of <code>Statuses</code>.\nGet field <code>system_voltage</code> from instance of <code>Statuses</code>.\nGet field <code>tarm_count</code> from instance of <code>Statuses</code>.\nGet field <code>temp</code> from instance of <code>Statuses</code>.\nGet field <code>thruster_arm</code> from instance of <code>Statuses</code>.\nA trait for an action that can be executed.\nAn action that runs one of two actions depending on if its …\nAn action that runs one of two actions depending on if its …\nA trait for an action that can be executed.\nAn action that can be modified at runtime.\nAn action that tries <code>count</code> times for a success\nAn action that runs while true\nRun two actions at once, and only exit when all actions …\nReturn first valid response from block of actions.\nAction that runs two actions at the same time and exits …\nGet second arg in action output\nRepresent this node in dot (graphviz) notation\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProduces a new function that puts <code>wrapper</code> around <code>wrapee</code>.\nInherit this trait if you have a bottom camera\nInherit this trait if you have a control board\nInherit this trait if you have a front camera\nInherit this trait if you have a MEB\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ndescends and goes forward for a certain duration\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAction to drive to a Buoy using vision will not set the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nExample function for Action system\nExample function for Action system\nFunction to demonstrate use of act_nest\nAlwaysBetter returns a false value\nAlwaysBetter returns a true value\nAlways returns a false value\nAlways returns a true value\nTransform Option/Result wrapped vector to a vector\nDevelopment Action that does… nothing\nNondisplaying action that resolves an ActionExec Type\n<code>NoOp</code>, but does not display on graph\nTransform Option/Result wrapped vector to a vector\nTransform <code>value</code> with <code>transform_function</code>.\nUnwraps Results and/or Options\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains information for dot (graphviz) graphing\nGenerate the .dot (graphviz) file to draw the action\nReturns the argument unchanged.\nIndents blocks inside the .dot (graphviz) file\nCalls <code>U::from(self)</code>.\nReorders the generated dot strings to render better\nWait for system to be armed\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSpecifies replacement or adjustment (+ value)\nStores the command to send to stability assist 2\nAction version of <code>linear_yaw_from_x</code>\nModification for a stability assist 1 command\nStores the command to send to stability assist 2\nModification for a stability assist 2 command\nStores the command to send to stability assist 2\nConvert all the invalid IEEE states into None\nConvert all the invalid IEEE states into None\nAdjusts the position according to <code>adjuster</code>.\nAdjusts the position according to <code>adjuster</code>.\nBounds rotations to 360 degrees\nBounds rotations to 360 degrees\nBounds speeds to [-1, 1]\nBounds speeds to [-1, 1]\n<code>linear_yaw_from_x</code> with a default value\nExecutes the position in stability assist\nExecutes the position in stability assist\nExecutes the position in stability assist\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGenerates a yaw adjustment from an x axis set, multiplying …\nGenerates a yaw adjustment from an x axis set, multiplying …\nSet rotation, bounded to 360 degrees\nSet rotation, bounded to 360 degrees\nSets speed, bounded to [-1, 1]\nSets speed, bounded to [-1, 1]\nGet field <code>target_depth</code> from instance of <code>Stability2Adjust</code>.\nGet field <code>target_depth</code> from instance of <code>Stability1Adjust</code>.\nGet field <code>target_pitch</code> from instance of <code>Stability2Adjust</code>.\nGet field <code>target_pitch</code> from instance of <code>Stability1Adjust</code>.\nGet field <code>target_roll</code> from instance of <code>Stability2Adjust</code>.\nGet field <code>target_roll</code> from instance of <code>Stability1Adjust</code>.\nGet field <code>target_yaw</code> from instance of <code>Stability2Adjust</code>.\nGet field <code>x</code> from instance of <code>Stability2Adjust</code>.\nGet field <code>x</code> from instance of <code>Stability1Adjust</code>.\nGet field <code>y</code> from instance of <code>Stability2Adjust</code>.\nGet field <code>y</code> from instance of <code>Stability1Adjust</code>.\nGet field <code>yaw_speed</code> from instance of <code>Stability1Adjust</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNormalizes vision output.\nRuns a vision routine to obtain object positions.\nRuns a vision routine to obtain object positions\nRuns a vision routine to obtain object positions\nRuns a vision routine to obtain the average of object …\nRuns a vision routine to obtain the average of object …\nRuns a vision routine to obtain object positions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHolds x, y, and angle offset of object in frame\nAllows <code>Mat</code> to be shared across threads for async. The C …\nHolds x and y offset of object in frame\nAllows <code>Vector&lt;Mat&gt;</code> to be shared across threads for async. …\nGet field <code>angle</code> from instance of <code>Angle2D</code>.\nGet field <code>class</code> from instance of <code>VisualDetection</code>.\nDraws self on top of <code>canvas</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdjusts position to [-1, 1] on both axes\nGet field <code>position</code> from instance of <code>VisualDetection</code>.\nGet field <code>x</code> from instance of <code>Offset2D</code>.\nGet field <code>x</code> from instance of <code>Angle2D</code>.\nGet field <code>y</code> from instance of <code>Offset2D</code>.\nGet field <code>y</code> from instance of <code>Angle2D</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet field <code>model</code> from instance of <code>BuoyModel</code>.\nGet field <code>threshold</code> from instance of <code>BuoyModel</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet field <code>model</code> from instance of <code>GatePoles</code>.\nGet field <code>threshold</code> from instance of <code>GatePoles</code>.\nRead-only struct for results from PCA computation\nWrapper for VecN that supports hashing\nCalculates PCA for the given matrix, wrapping OpenCV’s …\nReturns true if the image size is within the bounds\nProduces a new Mat with only full-value (255) points\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new Mat with the specified size\nReturns the dimensions for evenly divided blocks\nReturns only unique colors in the Mat\nReturns only unique colors for Mat with &gt; 1 dimension\nWrapper to let Rust know Net is Send and Sync.\nONNX vision model running via OpenCV\nGet field <code>bounding_box</code> from instance of <code>YoloDetection</code>.\nGet field <code>class_id</code> from instance of <code>YoloDetection</code>.\nGet field <code>confidence</code> from instance of <code>YoloDetection</code>.\nGet field <code>confidence</code> from instance of <code>YoloClass</code>.\nFull input -&gt; output processing\nForward pass the matrix through the model, skipping …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates model from in memory byte buffer\nCreates model from file (use a local path)\nGet field <code>identifier</code> from instance of <code>YoloClass</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert output from a model into detections\nReturns all detections from a net’s output\nCalculates coordinate factor based on model size\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet field <code>angle</code> from instance of <code>PosVector</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGet field <code>length</code> from instance of <code>PosVector</code>.\nGet field <code>length_2</code> from instance of <code>PosVector</code>.\nGet field <code>width</code> from instance of <code>PosVector</code>.\nGet field <code>x</code> from instance of <code>PosVector</code>.\nGet field <code>y</code> from instance of <code>PosVector</code>.")