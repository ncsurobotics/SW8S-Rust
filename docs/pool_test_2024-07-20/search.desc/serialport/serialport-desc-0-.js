searchState.loadedDescShard("serialport", 0, "serialport-rs is a cross-platform serial port library.\nSpecify to clear both data received and data not yet …\nSpecifies a break duration that is platform-dependent\nThe serial port is connected via Bluetooth\nSpecifies the duration of a transmission break\nSpecifies which buffer or buffers to purge when calling …\nNumber of bits per character\n8 bits per character\nContains the error value\nAn error type for serial port operations\nCategories of errors that can occur when interacting with …\nParity bit sets even number of 1 bits.\n5 bits per character\nFlow control modes\nFlow control using RTS/CTS signals.\nSpecify to clear data received but not read\nA parameter was incorrect.\nAn I/O error occurred.\nThe device is not available.\nNo parity bit.\nNo flow control.\nParity bit sets odd number of 1 bits.\nContains the success value\nOne stop bit.\nSpecify to clear data written but not yet transmitted\nParity checking modes\nThe serial port is connected via PCI (permanent port)\nA type for results generated by interacting with serial …\nA trait for serial port devices\nA struct containing all serial port settings\nA device-independent implementation of serial port …\nThe physical type of a <code>SerialPort</code>\n7 bits per character\n0.25-0.5s\n6 bits per character\nFlow control using XON/XOFF bytes.\nNumber of stop bits\nA serial port implementation for POSIX TTY ports\nTwo stop bits.\nAn unknown error occurred.\nIt can’t be determined how the serial port is connected\nThe serial port is connected via USB\nContains all possible USB information about a <code>SerialPort</code>\nReturns a list of all serial ports on system\nReturns the current baud rate.\nSet the baud rate in symbols-per-second\nThe baud rate in symbols-per-second\nGets the number of bytes available to be read from the …\nGet the number of bytes written to the output buffer, …\nDiscards all bytes from the serial driver’s input buffer …\nStop transmitting a break\nReturns the character size.\nSet the number of bits used to represent a character sent …\nNumber of bits used to represent a character sent on the …\nA description of the error suitable for end-users\nReturns the flow control mode.\nSet the type of signalling to use for controlling data …\nThe type of signalling to use for controlling data transfer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the corresponding <code>ErrorKind</code> for this error.\nThe kind of error this is\nManufacturer (arbitrary string)\nReturns the name of this port if it exists.\nConstruct a builder of <code>SerialPort</code> objects\nInstantiates a new error\nOpen a cross-platform interface to the port with the …\nOpen a platform-specific interface to the port with the …\nReturns the parity-checking mode.\nSet the type of parity to use for error checking\nThe type of parity to use for error checking\nSet the path to the serial port\nThe port name, usually the device path\nProduct ID\nThe short name of the serial port\nThe hardware device type that exposes this port\nProduct name (arbitrary string)\nReads the state of the Carrier Detect control signal.\nReads the state of the CTS (Clear To Send) control signal.\nReads the state of the Data Set Ready control signal.\nReads the state of the Ring Indicator control signal.\nSerial number (arbitrary string)\nSets the baud rate.\nStart transmitting a break\nSets the character size.\nSets the flow control mode.\nSets the parity-checking mode.\nSets the number of stop bits.\nSets the timeout for future I/O operations.\nReturns the number of stop bits.\nSet the number of bits to use to signal the end of a …\nNumber of bits to use to signal the end of a character\nReturns the current timeout.\nSet the amount of time to wait to receive data before …\nAmount of time to wait to receive data before timing out\nAttempts to clone the <code>SerialPort</code>. This allow you to write …\nVendor ID\nWrites to the Data Terminal Ready pin\nSets the state of the RTS (Request To Send) control signal.\nEnumerating serial ports on non-Linux POSIX platforms is …\nFlags to indicate which wires in a serial connection to use\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nSpecifies a break duration that is platform-dependent\nSpecifies the duration of a transmission break\nWrapper for RawFd to assure that it’s properly closed, …\n0.25-0.5s\nA serial port implementation for POSIX TTY ports\nReturns the port’s baud rate\nConvenience method for removing exclusive access from a fd …\nReturns the exclusivity of the port\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOpens a TTY device as a serial port.\nCreate a pair of pseudo serial terminals\nSends 0-valued bits over the port for a set duration\nSets the exclusivity of the port\nAttempts to clone the <code>SerialPort</code>. This allow you to write …")